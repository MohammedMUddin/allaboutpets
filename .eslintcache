[{"C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\index.js":"1","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\App.js":"2","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\reportWebVitals.js":"3","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\DogContent.jsx":"4","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\Navbar.jsx":"5","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\About.jsx":"6","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\CatContent.jsx":"7"},{"size":505,"mtime":1611160115999,"results":"8","hashOfConfig":"9"},{"size":3268,"mtime":1611432229708,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3663,"mtime":1611195912448,"results":"12","hashOfConfig":"9"},{"size":1577,"mtime":1611195689674,"results":"13","hashOfConfig":"9"},{"size":902,"mtime":1611196716032,"results":"14","hashOfConfig":"9"},{"size":4646,"mtime":1611429567845,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1mv65xc",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\index.js",[],["33","34"],"C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\App.js",["35","36","37","38"],"C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\reportWebVitals.js",[],"C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\DogContent.jsx",["39"],"import React from 'react'\r\nimport PetsRoundedIcon from '@material-ui/icons/PetsRounded'\r\nimport { Box, Button, Grid, Typography, Card, CardMedia, CardContent} from '@material-ui/core'\r\n\r\n\r\nfunction DogContent(props) {\r\n\r\n    const cardstyle = {\r\n        maxWidth: 345, \r\n      };\r\n    \r\n    const contentstyle = {\r\n        minWidth: 310,\r\n        maxWidth: 345, \r\n      };\r\n\r\n\r\n    return (\r\n        <Grid \r\n        container \r\n        direction =\"column\" \r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        style={{backgroundColor: \"#f5f4f4\", minHeight: \"95vh\"}} \r\n        > \r\n            \r\n            <Grid item xs={10}>\r\n                <Card style={cardstyle}> \r\n                    <CardMedia \r\n                        component=\"img\"\r\n                        height=\"240\"\r\n                        image={props.filterdItem.image.url}\r\n                    />\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n                <Card style={contentstyle}> \r\n                    <CardContent height=\"100%\" style={{backgroundColor: \"#cae4db\"}}>\r\n                        <Typography variant=\"h6\" style={{\"fontWeight\": \"bold\"}}>\r\n                        {props.filterdItem.name}\r\n                        </Typography>\r\n                        {/* The below three lines are conditionally rendered */}\r\n                        {(props.filterdItem.life_span) ? \r\n                        <Typography>\r\n                            <Typography \r\n                            variant=\"body1\"\r\n                            style={{\"fontWeight\": \"bold\"}}\r\n                            >Average life span:\r\n                            </Typography>\r\n                            <Typography \r\n                            variant=\"body1\">{props.filterdItem.life_span}\r\n                            </Typography>\r\n                        </Typography>\r\n                        : null}\r\n                        {(props.filterdItem.bred_for) ? \r\n                        <Typography>\r\n                            <Typography \r\n                            variant=\"body1\"\r\n                            style={{\"fontWeight\": \"bold\"}}\r\n                            >Usually bred for:\r\n                            </Typography>\r\n                            <Typography \r\n                            variant=\"body1\">{props.filterdItem.bred_for}\r\n                            </Typography>\r\n                        </Typography>\r\n                        : null}\r\n                        {(props.filterdItem.temperament) ? \r\n                        <Typography>\r\n                            <Typography \r\n                            variant=\"body1\"\r\n                            style={{\"fontWeight\": \"bold\"}}\r\n                            >Personality:\r\n                            </Typography>\r\n                            <Typography \r\n                            variant=\"body1\">{props.filterdItem.temperament}\r\n                            </Typography>\r\n                        </Typography>\r\n                        : null}\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item container direction =\"column\" alignItems=\"center\">              \r\n                <Grid item>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        style={{backgroundColor: \"#00303f\", color:\"#ffffff\"}} \r\n                        startIcon={<PetsRoundedIcon />} \r\n                        onClick={props.handleChange}\r\n                        > Next!\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DogContent;","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\Navbar.jsx",[],"C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\About.jsx",["40"],"import React from 'react'\r\nimport {Typography, Card, CardContent, Grid} from '@material-ui/core'\r\n\r\n\r\nexport default function About(){\r\n\r\n    const cardstyle = {\r\n        maxWidth: 345, \r\n      };\r\n    \r\n    const contentstyle = {\r\n        minWidth: 310,\r\n        maxWidth: 345, \r\n      };\r\n\r\n    return (    \r\n        <Grid container direction =\"column\" alignItems=\"center\" spacing={1}>\r\n             <Grid item xs={1}></Grid>\r\n            <Grid item xs={12}>\r\n                <Card style={contentstyle}> \r\n                    <CardContent height=\"100%\" style={{backgroundColor: \"#cae4db\"}}>\r\n                        <Typography variant=\"h6\" style={{\"fontWeight\": \"bold\"}}>\r\n                            This page was my first attempt at a react webapp. \r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","C:\\Users\\misba\\Desktop\\Github\\react-dog-info-app\\src\\components\\CatContent.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":16,"column":10,"nodeType":"47","messageId":"48","endLine":16,"endColumn":22},{"ruleId":"45","severity":1,"message":"49","line":16,"column":24,"nodeType":"47","messageId":"48","endLine":16,"endColumn":39},{"ruleId":"45","severity":1,"message":"50","line":59,"column":12,"nodeType":"47","messageId":"48","endLine":59,"endColumn":27},{"ruleId":"45","severity":1,"message":"51","line":61,"column":5,"nodeType":"47","messageId":"48","endLine":61,"endColumn":10},{"ruleId":"45","severity":1,"message":"52","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"45","severity":1,"message":"53","line":7,"column":11,"nodeType":"47","messageId":"48","endLine":7,"endColumn":20},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'randomCatNum' is assigned a value but never used.","Identifier","unusedVar","'setRandomCatNum' is assigned a value but never used.","'handleChangeCat' is defined but never used.","'catID' is assigned a value but never used.","'Box' is defined but never used.","'cardstyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]